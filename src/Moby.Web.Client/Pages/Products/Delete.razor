@page "/Products/Delete"

@inject IProductService ProductService
@inject NavigationManager NavigationManager

<PageTitle>Our Products</PageTitle>

<h1>Products</h1>

<p>This component demonstrates fetching data from the server.</p>

<EditForm Model="Product" class="row" OnValidSubmit="BeginProductDelete">
    <InputNumber @bind-Value="Product.Id" hidden disabled />
    <div class="col-lg-6 col-md-12 mb-3">
        <label for="@nameof(Product.Name)" class="mb-3">Product Name</label>
        <InputText id="@nameof(Product.Name)" class="form-control" @bind-Value="Product.Name" placeholder="My lovely product..." disabled />
        <ValidationMessage For="() => Product.Name"/>
    </div>

    <div class="col-lg-6 col-md-12 mb-3">
        <label for="@nameof(Product.Price)" class="mb-3">Product Price</label>
        <InputNumber id="@nameof(Product.Price)" class="form-control" @bind-Value="Product.Price" placeholder="13.99" disabled />
        <ValidationMessage For="() => Product.Price"/>
    </div>

    <div class="col-lg-6 col-md-12 mb-3">
        <label for="@nameof(Product.Category)" class="mb-3">Product Category</label>
        <InputText id="@nameof(Product.Category)" class="form-control" @bind-Value="Product.Category" placeholder="Electronics" disabled />
        <ValidationMessage For="() => Product.Category"/>
    </div>

    <div class="col-lg-6 col-md-12 mb-3">
        <label for="@nameof(Product.ImageUrl)" class="mb-3">Product Image URL</label>
        <InputText id="@nameof(Product.ImageUrl)" class="form-control" @bind-Value="Product.ImageUrl" placeholder="https://mygreatlink/images/somelinks...." disabled />
        <ValidationMessage For="() => Product.ImageUrl"/>
    </div>

    <div class="col-12 mb-3">
        <label for="@nameof(Product.Description)" class="mb-3">Product Description</label>
        <InputTextArea id="@nameof(Product.Description)" class="form-control" @bind-Value="Product.Description" placeholder="This great product has..." disabled />
        <ValidationMessage For="() => Product.Description"/>
    </div>

    <div class="col-3">
        <button class="btn btn-danger">Delete</button>
    </div>
</EditForm>


@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "productId")]
    public int ProductId { get; set; }

    private ProductDto Product = new();


    protected override async Task OnInitializedAsync()
    {
        var response = await ProductService.GetProductByIdAsync<ResponseDto>(ProductId);

        Product = JsonConvert.DeserializeObject<ProductDto>(Convert.ToString(response.Results));
    }

    private async Task BeginProductDelete()
    {
        await ProductService.DeleteProductAsync<ProductDto>(Product.Id);

        NavigationManager.NavigateTo("/Products");
    }
}