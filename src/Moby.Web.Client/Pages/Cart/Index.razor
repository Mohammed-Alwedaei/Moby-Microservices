@page "/cart"
@using Moby.Web.Shared.Models.Cart

@inject IProductService ProductService
@inject IShoppingCartService ShoppingCartService
@inject AuthenticationStateProvider AuthenticationState

<h3>Cart</h3>

@if (!_isLoading)
{
    <form method="post">
        <br />
        <div class="">
            <div class="card border mt-4 container">
                <div class="card-header bg-dark text-light ml-0 row ">
                    <div class="col-6">
                        <i class="fa fa-shopping-cart"></i> &nbsp;
                        Shopping Cart
                    </div>
                    <div class="col-6 text-end">
                        <a class="btn btn-outline-warning btn-sm">Continue Shopping</a>
                    </div>
                </div>
                <div class="card-body">
                    <div class=" d-none d-lg-block">
                        <div class="row text-info">
                            <div class="col-lg-2">
                            </div>
                            <div class="col-lg-5">
                                Product Details
                            </div>
                            <div class="col-lg-2">
                                Price
                            </div>
                            <div class="col-lg-2">
                                Count
                            </div>
                            <div class="col-lg-1">
                            </div>
                        </div>
                    </div>

                    <hr />

                    @foreach (var detail in _cart.CartDetails)
                    {
                        <div class="row h-100">
                            <div class="col-4 col-md-2 text-center py-2">
                                <img src="@detail.Product.ImageUrl" class="rounded" width="100%" />
                            </div>

                            <div class="col-8 col-md-5">
                                <h5>@detail.Product.Name</h5>
                                <div style="font-size:11px;">@((MarkupString)detail.Product.Description))</div>
                            </div>

                            <div class="col-3 col-md-2 pt-md-4" style="font-size:11px;">
                                <span style="font-size:17px;">@detail.Product.Price.ToString("c")</span>
                            </div>

                            <div class="col-3 col-md-2 pt-md-4" style="font-size:11px;">
                                <span style="font-size:17px;">@detail.Count</span>
                            </div>

                            <div class="col-2 col-lg-1 p-0 pt-lg-4 text-center">
                                <a class="btn btn-outline-danger">
                                    <i class="oi oi-trash"></i>
                                </a>
                            </div>
                        </div>
                    }
                    <hr />
                    <div class="row">
                        <div class="col-6">
                            <span>Coupon:</span>
                            <input />
                            <button type="submit" class="btn-success"> Apply </button>
                        </div>
                        <div class="col-6 text-end">
                            <span class="text-danger" style="font-size:21px;">  Order Total : @_cart.CartHeader.Total.ToString("c") <br /></span>
                        </div>
                    </div>
                </div>
                <div class="card-footer row">
                    <div class="col-6 col-md-3 offset-md-6">
                    </div>
                    <div class="col-6 col-md-3">
                        <a class="btn btn-success form-control ">
                            <span>Checkout</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </form>

}

@code {
    private CartDto _cart = new();

    private bool _isLoading;

    protected override async Task OnInitializedAsync()
    {
        _cart = await GetCartDtoByUserIdAsync();
    }

    private async Task<CartDto> GetCartDtoByUserIdAsync()
    {
        _isLoading = true;

        var cart = new CartDto();

        var userId = AuthenticationState.GetAuthenticationStateAsync()
            .Result.User.Claims.
            FirstOrDefault(c => c.Type == "sub")?.Value;

        var shoppingCartResponse = await ShoppingCartService.GetCartByUserIdAsync<ResponseDto>(userId);

        if (shoppingCartResponse.Results is not null || shoppingCartResponse.IsSuccess)
            cart = JsonConvert.DeserializeObject<CartDto>(Convert.ToString(shoppingCartResponse.Results));

        var cartTotal = 0m;

        foreach (var detail in cart.CartDetails)
        {
            cartTotal = (detail.Product.Price * detail.Count);
        }

        cart.CartHeader.Total = cartTotal;

        _isLoading = false;

        return cart;
    }
}
